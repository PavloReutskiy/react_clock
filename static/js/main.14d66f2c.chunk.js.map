{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","newTime","handleLeftClick","setState","this","window","setInterval","document","addEventListener","prevProps","prevState","console","info","toUTCString","slice","clockName","props","debug","removeEventListener","clearInterval","className","Component","App","hasClock","timerId","getRandomName","value","now","toString","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,KACXC,QAAS,GAHb,EAiCEC,gBAAkB,WAChB,EAAKC,SAAS,CAAEJ,MAAO,IAAIC,QAlC/B,uDAME,WAA2B,IAAD,OACxBI,KAAKD,SAAS,CACZF,QAASI,OAAOC,aAAY,WAC1B,EAAKH,SAAS,CAAEJ,MAAO,IAAIC,SAC1B,OAGLO,SAASC,iBAAiB,QAASJ,KAAKF,mBAb5C,gCAgBE,SAAmBO,EAAkBC,GAC/BA,EAAUX,QAAUK,KAAKN,MAAMC,OAEjCY,QAAQC,KAAKR,KAAKN,MAAMC,MAAMc,cAAcC,OAAO,IAAK,IAGtDL,EAAUM,YAAcX,KAAKY,MAAMD,WAErCJ,QAAQM,MAAR,uBAA8BR,EAAUM,UAAxC,eAAwDX,KAAKY,MAAMD,cAxBzE,kCA4BE,WACER,SAASW,oBAAoB,QAASd,KAAKF,iBAC3CG,OAAOc,cAAcf,KAAKN,MAAMG,WA9BpC,oBAqCE,WACE,IAAQF,EAAUK,KAAKN,MAAfC,MAER,OACE,sBAAMqB,UAAU,cAAhB,SACGrB,EAAMc,cAAcC,OAAO,IAAK,SA1CzC,GAA2BO,aCAdC,G,MAAb,4MACExB,MAAQ,CACNiB,UAAW,UACXQ,UAAU,EACVC,QAAS,GAJb,EA4BEC,cAAgB,WACd,IAAMC,EAAQ1B,KAAK2B,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,IA/BpB,uDAOE,WAA2B,IAAD,OACxBtB,KAAKD,SAAS,CACZqB,QAASnB,OAAOC,aAAY,WAC1B,EAAKH,SAAS,CAAEY,UAAW,EAAKU,oBAC/B,QAGLlB,SAASC,iBAAiB,eAAe,SAACqB,GACxCA,EAAMC,iBACN,EAAK3B,SAAS,CAAEoB,UAAU,OAG5BhB,SAASC,iBAAiB,SAAS,WACjC,EAAKL,SAAS,CAAEoB,UAAU,SApBhC,kCAwBE,WACElB,OAAOc,cAAcf,KAAKN,MAAM0B,WAzBpC,oBAkCE,WACE,MAAgCpB,KAAKN,MAA7BiB,EAAR,EAAQA,UAAWQ,EAAnB,EAAmBA,SAEnB,OACE,sBAAKH,UAAU,MAAf,UACE,6CAECG,GAEG,sBAAKH,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,cAAC,EAAD,CAAOA,UAAWA,cAlDhC,GAAyBM,cCRzBU,IAASC,OACP,cAAC,EAAD,IACAzB,SAAS0B,eAAe,W","file":"static/js/main.14d66f2c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\ntype State = {\n  today: Date,\n  newTime: number,\n};\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n    newTime: 0,\n  };\n\n  componentDidMount(): void {\n    this.setState({\n      newTime: window.setInterval(() => {\n        this.setState({ today: new Date() });\n      }, 1000),\n    });\n\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State): void {\n    if (prevState.today !== this.state.today) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }\n\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.handleLeftClick);\n    window.clearInterval(this.state.newTime);\n  }\n\n  handleLeftClick = () => {\n    this.setState({ today: new Date() });\n  };\n\n  render(): React.ReactNode {\n    const { today } = this.state;\n\n    return (\n      <span className=\"Clock__time\">\n        {today.toUTCString().slice(-12, -4)}\n      </span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n// import { extend } from 'cypress/types/lodash';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n  timerId: number,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n    timerId: 0,\n  };\n\n  componentDidMount(): void {\n    this.setState({\n      timerId: window.setInterval(() => {\n        this.setState({ clockName: this.getRandomName() });\n      }, 3300),\n    });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.state.timerId);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render(): React.ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && (\n            <div className=\"Clock\">\n              <strong className=\"Clock__name\">\n                {clockName}\n              </strong>\n\n              {' time is '}\n\n              <Clock clockName={clockName} />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}